pipeline {
    agent any

    parameters {
        choice(choices: ['default', 'all', 'nuc'],
               description: "Choose which host or host group.",
               name: 'TARGET')
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout your source code from version control
              checkout(
                  poll: false,
                  scm: scmGit(
                      branches: [[name: '*/main']],
                      extensions: [],
                      userRemoteConfigs: [
                          [credentialsId: 'jenkins-ssh-id',
                          url: 'git@github.com:romanpeters/maintenance-playbooks.git',
                          subdir: 'maintenance-playbooks'],
                          [credentialsId: 'jenkins-ssh-id',
                          url: 'git@github.com:romanpeters/infrastructure.git',
                          subdir: 'infrastructure']
                      ]
                  )
              )
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                ansiblePlaybook(
                    playbook: 'maintenance-playbooks/status/main.yml',
                    inventory: 'infrastructure/inventory.ini',
                    limit: params.TARGET)
            }
        }
    }

    post {
        success {
            echo 'Ansible playbook executed successfully'
            }
        failure {
            script {
                def msg = "Some of your servers seem offline"
                sh "curl -d '${msg}' ${NOTIFY_URL}"
                echo "${msg}"
            }
        }
    }
}
