---
- name: Install package updates
  hosts: localhost
  gather_facts: no

  tasks:
    - name: Get CSRFToken
      ansible.builtin.uri:
        url: "http://{{ hostvars['router']['ansible_host'] }}/cgi-bin/reboot.sh"
        validate_certs: false
        user: admin
        password: "{{ lookup('env', 'ROUTER_PASSWORD') }}"
        method: GET
        return_content: yes
        status_code: 200
      register: page_response

    - name: Extract CSRFToken
      set_fact:
        csrf_token: "{{ page_response.content | regex_findall('name=\"CSRFToken\" lang=\"en\" value=\"(.*?)\"') | first }}"

    - name: Send Notification
      ansible.builtin.uri:
        url: "{{ lookup('env', 'NOTIFY_URL' }}"
        method: POST
        body: "Rebooting your router..."
      ignore_errors: yes

    - name: Reboot router
      ansible.builtin.uri:
        url: "http://{{ hostvars['router']['ansible_host'] }}/cgi-bin/reboot.sh"
        validate_certs: false
        user: admin
        password: "{{ lookup('env', 'ROUTER_PASSWORD') }}"
        method: POST
        force_basic_auth: true
        status_code: 200
        body_format: form-urlencoded
        body:
          CSRFToken: "{{ csrf_token }}"
          reboot: "Reboot"

    - name: Wait until back online
      uri:
        url: "http://{{ hostvars['router']['ansible_host'] }}/"
        return_content: yes
        status_code:
          - 200
      until: uri_output.status == 200
      retries: 120 # Retries for 120 * 5 seconds = 10 minutes
      delay: 30
      register: uri_output
