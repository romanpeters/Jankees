pipeline {
    agent any

    parameters {
        choice(choices: ['default', 'all', 'nuc'], 
               description: "Choose which host or host group.", 
               name: 'TARGET')
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout your source code from version control
                checkout([$class: 'GitSCM',
                          branches: [[name: '*/main']],
                          doGenerateSubmoduleConfigurations: false,
                          extensions: [[$class: 'SubmoduleOption',
                                        disableSubmodules: false,
                                        parentCredentials: true,
                                        recursiveSubmodules: true,
                                        reference: '',
                                        trackingSubmodules: true]],
                          submoduleCfg: [],
                          userRemoteConfigs: [[credentialsId: 'jenkins-ssh-id',
                              url: 'git@github.com:romanpeters/maintenance-playbooks.git']]])
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                ansiblePlaybook(
                    playbook: 'apt-update/main.yml',
                    inventory: 'infrastructure/inventory.ini',
                    limit: params.TARGET)
            }
        }
    }

    post {
        success {
            script {
                def msg = "Updated your servers"
                sh "curl -d '${msg}' ${NOTIFY_URL}"
                echo "${msg}"
            }
        }
        failure {
            script {
                def msg = "I failed to update your servers"
                sh "curl -d '${msg}' ${NOTIFY_URL}"
                echo "${msg}"
            }
        }
    }
}
